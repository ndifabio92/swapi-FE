{"version":3,"file":"static/js/741.58834953.chunk.js","mappings":"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","sources":["components/movies/ItemMovieCharacter.jsx","hooks/useApiGetByUrl.js"],"sourcesContent":["import React from 'react'\nimport useApiGetByUrl from '../../hooks/useApiGetByUrl';\nimport {Accordion, AccordionDetails, AccordionSummary, Typography} from '@mui/material';\nimport {getImage} from '../../utils/getImage';\nimport Loader from \"../ui/Loader/Loader\";\nimport {swalAlert} from \"../../utils/alert\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport './styles/itemMovie.css';\n\nconst ItemMovieCharacter = ({url}) => {\n    const {data, loading, error} = useApiGetByUrl(url);\n    if (error) swalAlert('error', 'Error', 'The API call attempt failed.');\n\n    return (\n        <>\n            {\n                loading ? <Loader isLoading={loading}/> :\n\n                    <Accordion className=\"acordion\">\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography className=\"title\">{data.title}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className=\"container-item-movie\">\n                                <div className='container-img-description'>\n                                    <img className=\"img-card\" src={getImage(\"films\", data.title)} alt={data.name}/>\n                                    <>\n                                        a\n                                        <Typography className=\"description\">\n                                            <span>Release Date</span> {data.release_date}\n                                        </Typography>\n                                        <Typography className=\"description\">\n                                            <span>Director</span> {data.director}\n                                        </Typography>\n                                        <Typography className=\"description\">\n                                            <span>Producers</span> {data.producer}\n                                        </Typography>\n                                    </>\n                                </div>\n                            </div>\n                            <div className='container-opening'>\n                                <Typography className=\"description\">\n                                    {data.opening_crawl}\n                                </Typography>\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n\n            }\n        </>\n    )\n}\n\nexport default ItemMovieCharacter\n","import { useState, useEffect } from 'react';\n\nconst useApiGetByUrl = (url) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                const response = await fetch(url);\n                const jsonData = await response.json();\n\n                setData(jsonData);\n                setLoading(false);\n\n            } catch (error) {\n                console.error(error);\n                setError(error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n    return { data, loading, error };\n};\n\nexport default useApiGetByUrl;"],"names":["_ref","url","_useApiGetByUrl","useApiGetByUrl","data","loading","error","swalAlert","_jsx","_Fragment","children","Loader","isLoading","_jsxs","Accordion","className","AccordionSummary","expandIcon","ExpandMoreIcon","id","Typography","title","AccordionDetails","src","getImage","alt","name","release_date","director","producer","opening_crawl","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setLoading","_useState5","_useState6","setError","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","sent","json","t0","console","stop","apply","arguments"],"sourceRoot":""}