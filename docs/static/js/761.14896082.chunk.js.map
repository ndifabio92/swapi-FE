{"version":3,"file":"static/js/761.14896082.chunk.js","mappings":"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","sources":["components/table/headCells/headCellsStarships.js","components/starships/TableStarships.jsx","components/table/TableComponent.jsx","hooks/useApiGetAllUrls.js"],"sourcesContent":["export const headCells = [\n    {\n        id: \"name\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Name\"\n    },\n    {\n        id: \"model\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Model\"\n    },\n    {\n        id: \"manufacturer\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Manufacturer\"\n    },\n    {\n        id: \"cost_in_credits\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Cost in Credits\"\n    },\n    {\n        id: \"length\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Length\"\n    },\n    {\n        id: \"max_atmosphering_speed\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Max Atmosphering Speed\"\n    },\n    {\n        id: \"crew\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Crew\"\n    },\n    {\n        id: \"passengers\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Passengers\"\n    },\n    {\n        id: \"cargo_capacity\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Cargo Capacity\"\n    },\n    {\n        id: \"consumables\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Consumables\"\n    },\n    {\n        id: \"hyperdrive_rating\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Hyperdrive Rating\"\n    },\n    {\n        id: \"MGLT\",\n        numeric: true,\n        disablePadding: false,\n        label: \"MGLT\"\n    },\n    {\n        id: \"starship_class\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Starship Class\"\n    }\n];","import React from 'react';\nimport TableComponent from \"../table/TableComponent\";\nimport useApiGetAllUrls from \"../../hooks/useApiGetAllUrls\";\nimport {headCells} from \"../table/headCells/headCellsStarships\";\nimport Loader from \"../ui/Loader/Loader\";\n\nconst TableStarships = ({urls}) => {\n    const {data, loading, error} = useApiGetAllUrls(urls);\n    const array = Object.values(data).map((item) => {\n        const {edited, films, pilots, url, created, ...rest} = item;\n        return rest;\n    });\n    return (\n        <>\n            {\n                loading ? <Loader isLoading={loading}/> :\n                <TableComponent rows={array} headCells={headCells}/>\n            }\n        </>\n    )\n}\n\nexport default TableStarships;","import React, {useMemo, useState} from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport {visuallyHidden} from \"@mui/utils\";\n\n\nimport './styles/table.css';\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n    const {order, orderBy, onRequestSort,headCells} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"normal\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst TableComponent = ({rows, headCells}) => {\n    const [order, setOrder] = useState(\"asc\");\n    const [orderBy, setOrderBy] = useState(\"name\");\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const visibleRows = useMemo(\n        () =>\n            stableSort(rows, getComparator(order, orderBy)).slice(\n                page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage\n            ),\n        [order, orderBy, page, rowsPerPage]\n    );\n\n    return (\n        <Box sx={{width: \"100%\"}}>\n            <Paper sx={{width: \"100%\", mb: 2}}>\n                <TableContainer>\n                    <Table sx={{minWidth: 750}} aria-labelledby=\"tableTitle\">\n                        <EnhancedTableHead\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            headCells={headCells}\n                        />\n                        <TableBody>\n                            {visibleRows.map((row, index) => {\n                                return (\n                                    <TableRow\n                                        hover\n                                        tabIndex={-1}\n                                        key={row.name}\n                                        sx={{cursor: \"pointer\"}}\n                                    >\n                                        {Object.keys(row).map((key) => (\n                                            <TableCell align=\"right\" key={key}>\n                                                {row[key]}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </Box>\n    );\n}\n\nexport default TableComponent;","import { useEffect, useState } from 'react';\n\nconst useApiGetByUrl = (urls) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                const responses = await Promise.all(urls.map((url) => fetch(url)));\n                const jsonPromises = responses.map((response) => response.json());\n                const jsonData = await Promise.all(jsonPromises);\n\n                setData(jsonData);\n                setLoading(false);\n            } catch (error) {\n                console.error(error);\n                setError(error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [urls]);\n\n    return { data, loading, error };\n};\n\nexport default useApiGetByUrl;"],"names":["headCells","id","numeric","disablePadding","label","_ref","urls","_useApiGetAllUrls","useApiGetAllUrls","data","loading","array","error","Object","values","map","item","edited","films","pilots","url","created","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","Loader","isLoading","TableComponent","rows","descendingComparator","a","b","orderBy","EnhancedTableHead","props","order","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","_jsxs","TableSortLabel","active","direction","onClick","property","event","Box","component","sx","visuallyHidden","_useState","useState","_useState2","_slicedToArray","setOrder","_useState3","_useState4","setOrderBy","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","visibleRows","useMemo","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","width","Paper","mb","TableContainer","Table","minWidth","rowCount","length","TableBody","row","hover","tabIndex","cursor","keys","key","name","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","setData","setLoading","setError","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responses","jsonPromises","jsonData","wrap","_context","prev","next","Promise","all","fetch","sent","response","json","t0","console","stop","apply","arguments"],"sourceRoot":""}